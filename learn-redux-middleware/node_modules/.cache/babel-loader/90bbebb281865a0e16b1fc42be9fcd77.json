{"ast":null,"code":"var _jsxFileName = \"/Users/jungeun-p/private/Study/React/Study-react/learn-redux-middleware/src/containers/CounterContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Counter from \"../components/Counter\";\nimport { increase, decrease } from \"../modules/counter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst number = useSelector(({\n  counter\n}) => counter.number);\n\nconst CounterContainer = ({\n  number,\n  increase,\n  decrease\n}) => {\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    number: number,\n    increase: increase,\n    decrease: decrease\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\n_c = CounterContainer;\nexport default connect(state => ({\n  number: state.counter\n}), {\n  increase,\n  decrease\n})(CounterContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterContainer\");","map":{"version":3,"sources":["/Users/jungeun-p/private/Study/React/Study-react/learn-redux-middleware/src/containers/CounterContainer.js"],"names":["React","connect","Counter","increase","decrease","number","useSelector","counter","CounterContainer","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;;AAEA,MAAMC,MAAM,GAAGC,WAAW,CAAC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiBA,OAAO,CAACF,MAA1B,CAA1B;;AAEA,MAAMG,gBAAgB,GAAG,CAAC;AAAEH,EAAAA,MAAF;AAAUF,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAoC;AAC3D,sBAAO,QAAC,OAAD;AAAS,IAAA,MAAM,EAAEC,MAAjB;AAAyB,IAAA,QAAQ,EAAEF,QAAnC;AAA6C,IAAA,QAAQ,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;KAAMI,gB;AAIN,eAAeP,OAAO,CAAEQ,KAAD,KAAY;AAAEJ,EAAAA,MAAM,EAAEI,KAAK,CAACF;AAAhB,CAAZ,CAAD,EAAyC;AAC7DJ,EAAAA,QAD6D;AAE7DC,EAAAA;AAF6D,CAAzC,CAAP,CAGZI,gBAHY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Counter from \"../components/Counter\";\nimport { increase, decrease } from \"../modules/counter\";\n\nconst number = useSelector(({ counter }) => counter.number);\n\nconst CounterContainer = ({ number, increase, decrease }) => {\n  return <Counter number={number} increase={increase} decrease={decrease} />;\n};\n\nexport default connect((state) => ({ number: state.counter }), {\n  increase,\n  decrease,\n})(CounterContainer);\n"]},"metadata":{},"sourceType":"module"}