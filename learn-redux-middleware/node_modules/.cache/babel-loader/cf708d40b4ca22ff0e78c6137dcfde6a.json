{"ast":null,"code":"var _jsxFileName = \"/Users/jungeun-p/private/Study/React/Study-react/learn-redux-middleware/src/containers/CounterContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Counter from \"../components/Counter\";\nimport counter from \"../modules/counter\";\nimport { increase, decrease } from \"../modules/counter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CounterContainer = ({\n  number,\n  increase,\n  decrease\n}) => {\n  return /*#__PURE__*/_jsxDEV(Counter, {\n    number: number,\n    onIncrease: increase,\n    onDecrease: decrease\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CounterContainer;\nexport default connect(state => ({\n  number: state.counter\n}), {\n  increase,\n  decrease\n}, dispatch)(CounterContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterContainer\");","map":{"version":3,"sources":["/Users/jungeun-p/private/Study/React/Study-react/learn-redux-middleware/src/containers/CounterContainer.js"],"names":["React","connect","Counter","counter","increase","decrease","CounterContainer","number","state","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,oBAAnC;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUH,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAAoC;AAC3D,sBACE,QAAC,OAAD;AAAS,IAAA,MAAM,EAAEE,MAAjB;AAAyB,IAAA,UAAU,EAAEH,QAArC;AAA+C,IAAA,UAAU,EAAEC;AAA3D;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;KAAMC,gB;AAMN,eAAeL,OAAO,CACnBO,KAAD,KAAY;AAAED,EAAAA,MAAM,EAAEC,KAAK,CAACL;AAAhB,CAAZ,CADoB,EAEpB;AACEC,EAAAA,QADF;AAEEC,EAAAA;AAFF,CAFoB,EAMpBI,QANoB,CAAP,CAObH,gBAPa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Counter from \"../components/Counter\";\nimport counter from \"../modules/counter\";\nimport { increase, decrease } from \"../modules/counter\";\n\nconst CounterContainer = ({ number, increase, decrease }) => {\n  return (\n    <Counter number={number} onIncrease={increase} onDecrease={decrease} />\n  );\n};\n\nexport default connect(\n  (state) => ({ number: state.counter }),\n  {\n    increase,\n    decrease,\n  },\n  dispatch\n)(CounterContainer);\n"]},"metadata":{},"sourceType":"module"}